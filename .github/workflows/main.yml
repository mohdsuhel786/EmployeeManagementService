name: EmployeeManagementService CI/CD

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to build'
        default: 'main'
      env:
        description: 'Environment to deploy'
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

env:
  SERVICES: service-registry,api-gateway,auth-service,user-service,employee-service
  BASE_PATH: 'D:/Workbench/micrservice-working/EmployeeManagementSystem/EmployeeManagementSystem'
  DOCKER_REGISTRY: 'mohdsuhel786/employee_management_service'
  ARGOCD_SERVER: 'http://localhost:8080'  # set your ArgoCD server URL
  ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}

jobs:
  detect-services:
    runs-on: [self-hosted, windows]
    outputs:
      services: ${{ steps.set-output.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Detect changed services
        id: set-output
        shell: powershell
        run: |
          Write-Host "Detecting changed services..."
          $changed = @()
          $services = "${{ env.SERVICES }}".Split(",")
          git fetch --depth=2 origin main
          foreach ($svc in $services) {
              if (git diff --name-only HEAD~1 HEAD | Select-String -Pattern "^$svc/") {
                  $changed += $svc
              }
          }
          if ($changed.Count -eq 0) {
              Write-Host "No changes detected. Building all services."
              $changed = $services
          }
          Write-Host "Services to build: $($changed -join ',')"
          "services=$($changed -join ',')" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

  build-and-deploy:
    needs: detect-services
    runs-on: [self-hosted, windows]
    strategy:
      matrix:
        service: [service-registry,api-gateway,auth-service,user-service,employee-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build Docker image
        if: ${{ contains(needs.detect-services.outputs.services, matrix.service) }}
        shell: powershell
        run: |
          Write-Host "Building Docker image for ${{ matrix.service }}"
          Push-Location "${{ env.BASE_PATH }}\${{ matrix.service }}"
          & mvn -T 1C clean package -DskipTests jib:dockerBuild "-Djib.to.image=${{ matrix.service }}:latest"
          Pop-Location

  sync-argocd:
    needs: build-and-deploy
    runs-on: [ self-hosted, windows ]
    steps:
      - name: Trigger ArgoCD sync
        shell: powershell
        run: |
          $appName = if ("${{ github.event.inputs.env }}" -eq "prod") { "employee-management-prod" } else { "employee-management-dev" }
          Write-Host "Syncing app: $appName"
          argocd login $Env:ARGOCD_SERVER --grpc-web --insecure --auth-token $Env:ARGOCD_TOKEN
          argocd app list
          argocd app sync $appName --grpc-web
          Write-Host "ArgoCD sync triggered successfully."
  
