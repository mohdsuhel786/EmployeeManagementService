# ===================== Service Registry =====================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-registry
  labels:
    app: service-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-registry
  template:
    metadata:
      labels:
        app: service-registry
    spec:
      containers:
        - name: service-registry
          image: mohdsuhel786/service-registry:1.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8761
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8761
            initialDelaySeconds: 40
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: service-registry
spec:
  type: NodePort
  selector:
    app: service-registry
  ports:
    - protocol: TCP
      port: 8761
      targetPort: 8761
      nodePort: 30001

# ===================== API Gateway =====================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      initContainers:
        - name: wait-for-registry
          image: busybox
          command: ['sh', '-c', 'until nc -z service-registry 8761; do echo waiting for registry; sleep 3; done;']
      containers:
        - name: api-gateway
          image: mohdsuhel786/api-gateway:1.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: NodePort
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002

# ===================== User Service =====================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      initContainers:
        - name: wait-for-registry
          image: busybox
          command: ['sh', '-c', 'until nc -z service-registry 8761; do echo waiting for registry; sleep 3; done;']
      containers:
        - name: user-service
          image: mohdsuhel786/user-service:1.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8081
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  type: NodePort
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30003

# ===================== Employee Service =====================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-service
  labels:
    app: employee-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: employee-service
  template:
    metadata:
      labels:
        app: employee-service
    spec:
      initContainers:
        - name: wait-for-registry
          image: busybox
          command: ['sh', '-c', 'until nc -z service-registry 8761; do echo waiting for registry; sleep 3; done;']
      containers:
        - name: employee-service
          image: mohdsuhel786/employee-service:1.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8082
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: employee-service
spec:
  type: NodePort
  selector:
    app: employee-service
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
      nodePort: 30004

# ===================== Auth Service =====================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      initContainers:
        - name: wait-for-registry
          image: busybox
          command: ['sh', '-c', 'until nc -z service-registry 8761; do echo waiting for registry; sleep 3; done;']
      containers:
        - name: auth-service
          image: mohdsuhel786/auth-service:1.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8083
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8083
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8083
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  type: NodePort
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
      nodePort: 30005
